// <auto-generated />
using System;
using GestaoFacil.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestaoFacil.Dados.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Cartao", b =>
                {
                    b.Property<int>("CartaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("Taxa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("permititParcelamentoNoCartao")
                        .HasColumnType("bit");

                    b.HasKey("CartaoId");

                    b.ToTable("Cartao");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AceitoNotificaoes")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Informacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Responsavel")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Sexo")
                        .HasColumnType("bit");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Componente", b =>
                {
                    b.Property<int>("ComponenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ComponenteId");

                    b.HasIndex("ModuloId");

                    b.ToTable("Componentes");

                    b.HasData(
                        new
                        {
                            ComponenteId = 1,
                            Descricao = "Cadastro de Profissionais",
                            ModuloId = 2,
                            Nome = "mnuItemProfissionais"
                        },
                        new
                        {
                            ComponenteId = 2,
                            Descricao = "Cadastro de cliente",
                            ModuloId = 2,
                            Nome = "mnuItemClientes"
                        },
                        new
                        {
                            ComponenteId = 3,
                            Descricao = "Cadastro de serviço",
                            ModuloId = 2,
                            Nome = "mnuItemServicos"
                        },
                        new
                        {
                            ComponenteId = 4,
                            Descricao = "Cadastro de produtos",
                            ModuloId = 2,
                            Nome = "mnuItemProdutos"
                        },
                        new
                        {
                            ComponenteId = 5,
                            Descricao = "Cadastro de cartão",
                            ModuloId = 2,
                            Nome = "mnuItemCrtDebCred"
                        },
                        new
                        {
                            ComponenteId = 6,
                            Descricao = "Cadastro de comissão",
                            ModuloId = 2,
                            Nome = "mnuItemComissao"
                        },
                        new
                        {
                            ComponenteId = 7,
                            Descricao = "Cadastro de vale",
                            ModuloId = 2,
                            Nome = "mnuItemCtlVale"
                        },
                        new
                        {
                            ComponenteId = 8,
                            Descricao = "Cadastro de usuários",
                            ModuloId = 8,
                            Nome = "mnuItemCadastroUsuarios"
                        },
                        new
                        {
                            ComponenteId = 9,
                            Descricao = "Cadastro de despesa",
                            ModuloId = 3,
                            Nome = "mnuItemDespesas"
                        },
                        new
                        {
                            ComponenteId = 10,
                            Descricao = "Relatórios gerencias",
                            ModuloId = 4,
                            Nome = "mnuItemFaturamento"
                        },
                        new
                        {
                            ComponenteId = 11,
                            Descricao = "Relatório de faturamento",
                            ModuloId = 4,
                            Nome = "submenuitem"
                        });
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Despesa", b =>
                {
                    b.Property<int>("DespesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("DespesaIsPaga")
                        .HasColumnType("bit");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(44)")
                        .HasMaxLength(44);

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("TipoDespesaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DespesaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Despesa");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Faturamento", b =>
                {
                    b.Property<int>("FaturamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cancelado")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Origem")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoPagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPgtoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("FaturamentoId");

                    b.HasIndex("ClienteID");

                    b.HasIndex("TipoPagamentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Faturamento");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("FornecedorId");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TelResidencial")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.HasKey("FuncionarioId");

                    b.ToTable("Funcionario");

                    b.HasData(
                        new
                        {
                            FuncionarioId = 1,
                            Ativo = false,
                            DataNascimento = new DateTime(2020, 10, 14, 22, 12, 57, 923, DateTimeKind.Local).AddTicks(5927),
                            Email = "",
                            Nome = "padrao",
                            Salario = 0m,
                            cpf = "32563614805"
                        });
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.ItemFaturamento", b =>
                {
                    b.Property<int>("ItemFaturamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bruto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BrutoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("FaturamentoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LiquidoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemFaturamentoId");

                    b.HasIndex("FaturamentoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("ItemFaturamento");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Modulo", b =>
                {
                    b.Property<int>("ModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ModuloId");

                    b.ToTable("Modulo");

                    b.HasData(
                        new
                        {
                            ModuloId = 1,
                            Descricao = "menu agenda",
                            Nome = "mnuAgenda"
                        },
                        new
                        {
                            ModuloId = 2,
                            Descricao = "menu de cadastro",
                            Nome = "mnuCadastro"
                        },
                        new
                        {
                            ModuloId = 3,
                            Descricao = "menu de financeiro",
                            Nome = "mnuFinanceiro"
                        },
                        new
                        {
                            ModuloId = 4,
                            Descricao = "menu relatorios",
                            Nome = "mnuRelatorios"
                        },
                        new
                        {
                            ModuloId = 5,
                            Descricao = "menu de ferramentas",
                            Nome = "mnuferramentas"
                        },
                        new
                        {
                            ModuloId = 6,
                            Descricao = "menu sistema",
                            Nome = "mnuferramentas"
                        },
                        new
                        {
                            ModuloId = 7,
                            Descricao = "menu lateral",
                            Nome = "mnulateral"
                        },
                        new
                        {
                            ModuloId = 8,
                            Descricao = "menu de sistema",
                            Nome = "mnusistema"
                        });
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TipoPerfil")
                        .HasColumnType("int");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfil");

                    b.HasData(
                        new
                        {
                            PerfilId = 1,
                            Descricao = "MASTER",
                            TipoPerfil = 0
                        },
                        new
                        {
                            PerfilId = 2,
                            Descricao = "ADMINISTRADOR",
                            TipoPerfil = 1
                        },
                        new
                        {
                            PerfilId = 3,
                            Descricao = "COLABORADOR",
                            TipoPerfil = 2
                        });
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Custo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal>("MargemRevenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProdutoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Servico", b =>
                {
                    b.Property<int>("ServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Comissao")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("DuracaoEmMinutos")
                        .HasColumnType("int");

                    b.Property<bool>("IsDescontinuado")
                        .HasColumnType("bit");

                    b.Property<decimal>("preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ServicoId");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Situacao", b =>
                {
                    b.Property<int>("SituacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeSituacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SituacaoId");

                    b.ToTable("Situacao");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.TipoDespesa", b =>
                {
                    b.Property<int>("TipoDespesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("TipoDespesaId");

                    b.ToTable("TipoDespesa");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.TipoPagamento", b =>
                {
                    b.Property<int>("TipoPagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("TipoPagamentoId");

                    b.ToTable("TipoPagamento");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmaSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsGrupo")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.Property<bool>("Visualisar")
                        .HasColumnType("bit");

                    b.HasKey("UsuarioId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            ConfirmaSenha = "",
                            DataCadastro = new DateTime(2020, 10, 14, 22, 12, 57, 925, DateTimeKind.Local).AddTicks(9833),
                            FuncionarioId = 1,
                            IsGrupo = true,
                            Login = "ADMINISTRADOR",
                            PerfilId = 2,
                            Senha = "123123",
                            Situacao = true,
                            Visualisar = false
                        },
                        new
                        {
                            UsuarioId = 2,
                            ConfirmaSenha = "",
                            DataCadastro = new DateTime(2020, 10, 14, 22, 12, 57, 926, DateTimeKind.Local).AddTicks(3144),
                            FuncionarioId = 1,
                            IsGrupo = true,
                            Login = "COLABORADOR",
                            PerfilId = 3,
                            Senha = "123123",
                            Situacao = true,
                            Visualisar = false
                        },
                        new
                        {
                            UsuarioId = 3,
                            ConfirmaSenha = "",
                            DataCadastro = new DateTime(2020, 10, 14, 22, 12, 57, 926, DateTimeKind.Local).AddTicks(3385),
                            FuncionarioId = 1,
                            IsGrupo = true,
                            Login = "MASTER",
                            PerfilId = 1,
                            Senha = "123123",
                            Situacao = true,
                            Visualisar = false
                        });
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Vale", b =>
                {
                    b.Property<int>("ValeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ValeId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Vale");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Componente", b =>
                {
                    b.HasOne("GestaoFacil.Dados.Modelos.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Despesa", b =>
                {
                    b.HasOne("GestaoFacil.Dados.Modelos.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("GestaoFacil.Dados.Modelos.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Faturamento", b =>
                {
                    b.HasOne("GestaoFacil.Dados.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("GestaoFacil.Dados.Modelos.TipoPagamento", "TipoPagamento")
                        .WithMany()
                        .HasForeignKey("TipoPagamentoId");

                    b.HasOne("GestaoFacil.Dados.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.ItemFaturamento", b =>
                {
                    b.HasOne("GestaoFacil.Dados.Modelos.Faturamento", "Faturamento")
                        .WithMany()
                        .HasForeignKey("FaturamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoFacil.Dados.Modelos.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Usuario", b =>
                {
                    b.HasOne("GestaoFacil.Dados.Modelos.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoFacil.Dados.Modelos.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoFacil.Dados.Modelos.Vale", b =>
                {
                    b.HasOne("GestaoFacil.Dados.Modelos.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
